<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>100 Men VS 1 Gorilla</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            background: url('gorilla-background.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: 'Press Start 2P', cursive;
            color: #fff;
            text-align: center;
        }
        h1 {
            font-size: 3em;
            margin-top: 30px;
            text-shadow: 2px 2px #000;
        }
        p {
            font-size: 1.2em;
            margin: 20px auto;
            max-width: 600px;
            background: rgba(0, 0, 0, 0.6);
            padding: 15px;
            border-radius: 10px;
        }
        .button {
            background-color: #ff9900;
            color: white;
            padding: 15px 30px;
            margin: 10px;
            border: none;
            border-radius: 5px;
            font-size: 1.2em;
            cursor: pointer;
        }
        .button:hover {
            background-color: #ff6600;
        }
        .emoji-bar {
            font-size: 2em;
            margin-top: 40px;
        }
        canvas {
            margin-top: 40px;
            border: 4px solid #fff;
            background-color: black;
        }
        #score {
            position: absolute;
            color: yellow;
            font-size: 24px;
            top: 10px;
            left: 10px;
            text-shadow: 1px 1px #000;
        }
        #message {
            position: absolute;
            color: red;
            font-size: 24px;
            text-align: center;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
            text-shadow: 1px 1px #000;
        }
    </style>
    <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
</head>
<body>
    <h1>🦍 100 MEN VS 1 GORILLA 🥊</h1>
    <p>Join the wildest meme movement online! Fight, cheer, and laugh in the ultimate showdown. This is for Harambe — no whitepaper, just vibes. 🥊🦍💥</p>
    <button class="button" onclick="window.open('https://t.me/+VDTo0tVQMvU0MWQ8', '_blank')">🚀 Join the Movement</button>
    <button class="button" onclick="alert('Bro, just a meme coin, no whitepaper. Enjoy the ride! 🦍✨')">📜 Whitepaper</button>

    <div class="emoji-bar">
        🦍🥊💥👊🔥💣⚡💥🙌🦍🥊💥👊🔥💣⚡💥🙌<br>
        👥👥👥👥👥👥👥👥👥👥👥👥👥👥👥👥<br>
        🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍🦍<br>
    </div>

    <canvas id="gameCanvas" width="600" height="400"></canvas>
    <div id="score">Score: 0/100</div>
    <div id="message"></div>

    <script>
        // Game settings
        const WIDTH = 600;
        const HEIGHT = 400;
        const BLOCK_SIZE = 20;
        let FPS = 5; // Slower at start

        // Colors
        const BLACK = "#000000";
        const WHITE = "#FFFFFF";
        const RED = "#FF0000";
        const YELLOW = "#FFFF00";
        const GREEN = "#00FF00";

        // Canvas setup
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        const scoreDisplay = document.getElementById("score");
        const messageDisplay = document.getElementById("message");

        // Load images (assumed to be in the same directory as index.html)
        const gorillaImg = new Image();
        const humanImg = new Image();
        let useGorillaImage = false;
        let useHumanImage = false;

        gorillaImg.onload = () => { useGorillaImage = true; };
        humanImg.onload = () => { useHumanImage = true; };
        gorillaImg.src = "./Gorillavs100.png"; // Ensure this file is in the repository
        humanImg.src = "./Men100.png"; // Ensure this file is in the repository

        // Gorilla class
        class Gorilla {
            constructor() {
                this.body = [[WIDTH / 2, HEIGHT / 2]];
                this.direction = [1, 0];
                this.size = BLOCK_SIZE * 2;
                this.image = null;
                if (useGorillaImage) {
                    this.image = gorillaImg;
                }
            }

            move() {
                const head = this.body[0];
                const newX = (head[0] + this.direction[0] * BLOCK_SIZE) % WIDTH;
                const newY = (head[1] + this.direction[1] * BLOCK_SIZE) % HEIGHT;
                this.body.unshift([newX < 0 ? WIDTH - BLOCK_SIZE : newX, newY < 0 ? HEIGHT - BLOCK_SIZE : newY]);
            }

            grow() {
                this.size += 2;
            }

            draw() {
                const [headX, headY] = this.body[0];
                const centerX = headX - this.size / 4;
                const centerY = headY - this.size / 4;
                if (useGorillaImage && this.image) {
                    ctx.drawImage(this.image, centerX, centerY, this.size, this.size);
                } else {
                    ctx.fillStyle = GREEN;
                    ctx.fillRect(centerX, centerY, this.size, this.size);
                }
            }
        }

        // Human class
        class Human {
            constructor() {
                this.position = this.randomPosition();
                this.image = null;
                if (useHumanImage) {
                    this.image = humanImg;
                }
            }

            randomPosition() {
                return [
                    Math.floor(Math.random() * (WIDTH / BLOCK_SIZE)) * BLOCK_SIZE,
                    Math.floor(Math.random() * (HEIGHT / BLOCK_SIZE)) * BLOCK_SIZE
                ];
            }

            draw() {
                if (useHumanImage && this.image) {
                    ctx.drawImage(this.image, this.position[0], this.position[1], BLOCK_SIZE * 2, BLOCK_SIZE * 2);
                } else {
                    ctx.fillStyle = WHITE;
                    ctx.fillRect(this.position[0], this.position[1], BLOCK_SIZE, BLOCK_SIZE);
                }
            }
        }

        // Game logic
        const gorilla = new Gorilla();
        let human = new Human();
        let score = 0;
        let speed = FPS;
        let messageTimer = 0;
        let messageText = "";
        const TARGET_SCORE = 100;

        // Handle keyboard input
        document.addEventListener("keydown", (event) => {
            if (event.key === "ArrowUp" && gorilla.direction[1] !== 1) {
                gorilla.direction = [0, -1];
            } else if (event.key === "ArrowDown" && gorilla.direction[1] !== -1) {
                gorilla.direction = [0, 1];
            } else if (event.key === "ArrowLeft" && gorilla.direction[0] !== 1) {
                gorilla.direction = [-1, 0];
            } else if (event.key === "ArrowRight" && gorilla.direction[0] !== -1) {
                gorilla.direction = [1, 0];
            }
        });

        // Main game loop
        function gameLoop() {
            // Update
            gorilla.move();

            if (gorilla.body[0][0] === human.position[0] && gorilla.body[0][1] === human.position[1]) {
                score++;
                gorilla.grow();
                human = new Human();
                messageText = `${score} man${score === 1 ? " down" : " down"}!`;
                messageTimer = Date.now();
                if (score % 10 === 0) {
                    speed += 1;
                }
            }

            // Draw
            ctx.fillStyle = BLACK;
            ctx.fillRect(0, 0, WIDTH, HEIGHT);
            gorilla.draw();
            human.draw();

            scoreDisplay.textContent = `Score: ${score}/100`;

            if (messageText && Date.now() - messageTimer < 1000) {
                messageDisplay.textContent = messageText;
            } else {
                messageDisplay.textContent = "";
            }

            if (score >= TARGET_SCORE) {
                alert("🎉 You defeated all 100 men! 🦍💥");
                return;
            }

            setTimeout(gameLoop, 1000 / speed);
        }

        // Start the game
        gameLoop();
    </script>
</body>
</html>